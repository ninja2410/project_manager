<?php namespace App\Http\Requests;

use App\Http\Requests\Request;
use Illuminate\Support\Facades\Session;
use \Response;
class ItemRequest extends Request {

	/**
	 * Determine if the user is authorized to make this request.
	 *
	 * @return bool
	 */
	public function authorize()
	{
		return true;
	}

	/**
	 * Get the validation rules that apply to the request.
	 *
	 * @return array
	 */
	public function rules()
	{
		
		// if($this->isMethod('PUT'))
		// {
		// 	$upc_ean_isbn = 'unique:items,upc_ean_isbn,' . $this->get('id');
		// }
		// else {
		// 	$upc_ean_isbn = '';
		// }
		return  [
			'item_name' => 'required',
			'cost_price' => 'required',
			// 'selling_price' => 'required',
			'avatar' => 'mimes:jpeg,bmp,png'
			// 'upc_ean_isbn' => 'unique:items,upc_ean_isbn,' . $this->get('id')
		];
	}

	public function forbiddenResponse()
    {
        return Response::make('Sorry!',403);
    }
    
    public function messages()
    {
        return [
			'avatar.mimes' => 'Tipo no válido. Solo se permite jpg/jpeg, bmp y png.',
			'unique' => 'El :attribute debe ser único.',
			'upc_ean_isbn.unique' => 'El código debe ser único.'
        ];
    }
    public function response(array $errors)
    {
        $message = '';
        foreach ($errors as $error){
            $message .= $error[0].' | ';
        }
        Session::flash('message', $message);
        Session::flash('alert-class', 'alert-error');
        return parent::response($errors); // TODO: Change the autogenerated stub
    }
}
